swagger: "2.0"
info:
  title: Pioneer Lab Assignment
  version: "1.0"
paths:
  /auth/register:
    post:
      summary: Register a new user
      parameters:
        - in: body
          name: user
          description: User object containing email and password
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        200:
          description: User registered successfully
  /auth/login:
    post:
      summary: Log in with existing user credentials
      parameters:
        - in: body
          name: credentials
          description: User credentials containing email and password
          required: true
          schema:
            $ref: "#/definitions/LoginCredentials"
      responses:
        200:
          description: User logged in successfully
  /auth/logout:
    get:
      summary: Log out the current user
      responses:
        200:
          description: User logged out successfully
  /data:
    get:
      summary: Retrieve data from public APIs
      parameters:
        - in: query
          name: category
          description: Filter data by category (case-insensitive)
          required: false
          type: string
        - in: query
          name: limit
          description: Limit the number of results returned
          required: false
          type: integer
      responses:
        200:
          description: Data fetched successfully
        400:
          description: Invalid request parameters
        404:
          description: No data found matching the criteria
        500:
          description: Internal server error
  /data/filter:
    get:
      summary: Retrieve filtered data from public APIs (Protected)
      parameters:
        - in: query
          name: category
          description: Filter data by category (case-insensitive)
          required: false
          type: string
        - in: query
          name: limit
          description: Limit the number of results returned
          required: false
          type: integer
      security:
        - JWT: []
      responses:
        200:
          description: Data fetched successfully
        401:
          description: Unauthorized: No token provided or invalid token
        500:
          description: Internal server error
securityDefinitions:
  JWT:
    type: apiKey
    name: Authorization
    in: header
    description: JWT token obtained after successful login
definitions:
  User:
    type: object
    properties:
      email:
        type: string
        format: email
        example: user@example.com
      password:
        type: string
        format: password
        example: Password123!
  LoginCredentials:
    type: object
    properties:
      email:
        type: string
        format: email
        example: user@example.com
      password:
        type: string
        format: password
        example: Password123!
